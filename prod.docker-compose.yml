version: '3.8'

services:
  tr-3-apache:
    container_name: tr-3-apache
    image: httpd:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./vue/vuetify-project/dist:/usr/local/apache2/htdocs/

  tr-3-back-principal:
    container_name: tr-3-back-principal
    build:
      dockerfile: ./back/principal/dev.Dockerfile
      context: .
    command: sh -c "cp .env.PROD .env && npm install && npm run dev"
    volumes:
      - ./back/principal:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - 4000:4000
    links:
      - tr-3-mysql
    depends_on:
      - tr-3-mysql

  tr-3-back-odoo:
    container_name: tr-3-back-odoo
    build:
      dockerfile: ./back/odoo/dev.Dockerfile
      context: .
    command: sh -c "cp .env.PROD .env && npm install && npm run dev"
    volumes:
      - ./back/odoo:/usr/src/app
    working_dir: /usr/src/app
    ports:
      - 4001:4001  

  tr-3-mysql:
    container_name: tr-3-mysql
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: game
    volumes:
      - mysql-db:/var/lib/mysql:rw
    ports:
      - 3306:3306

  tr-3-adminer:
    container_name: tr-3-adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: tr-3-mysql
    depends_on:
      - tr-3-mysql

  tr-3-portainer:
    container_name: tr-3-portainer
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
      - 9000:9000
    volumes:
      - data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    command: --http-enabled

  tr-3-odoo:
    container_name: tr-3-odoo
    image: odoo:17
    depends_on:
      - tr-3-odoo-db
    ports:
      - 8069:8069
    environment:
      - HOST=tr-3-odoo-db
      - USER=odoo
      - PASSWORD=odoo
    volumes:
      - odoo-data:/var/lib/odoo
      - ./back/odoo/odooFiles/addons:/mnt/extra-addons
      - ./back/odoo/odooFiles/config:/etc/odoo
      - ./back/odoo/odooFiles/config/odoo.conf:/etc/odoo/odoo.conf
    command: >
      sh -c "
      /entrypoint.sh;
      sleep 10;
      odoo -d odoo -i sale,invoicing,stock --without-demo=all --stop-after-init;
      if [ $? -eq 0 ]; then
        echo 'Modules installed successfully. Starting Odoo server...';
        odoo -d odoo;
      else
        echo 'Module installation failed. Check logs for details.';
      fi
      "

  tr-3-odoo-db:
    container_name: tr-3-odoo-db
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: odoo
      POSTGRES_PASSWORD: odoo
      POSTGRES_DB: odoo
    volumes:
      - odoo-db-data:/var/lib/postgresql/data

  tr-3-pgadmin:
    container_name: tr-3-pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - 8081:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - tr-3-odoo-db
    volumes:
      - pgadmin-data:/var/lib/pgadmin4
  tr-3-statistics:
    container_name: tr-3-statisticss
    image: python:3.10
    volumes:
      - ./back/Statistics:/app
      - ./back/principal/Statistics:/Images
    working_dir: /app
    command: sh -c "cp .env.PROD .env && pip install pandas matplotlib seaborn requests python-dotenv pytz && python /app/script.py"
    depends_on:
      - tr-3-back-principal
    restart: always

volumes:
  mysql-db:
  data:
  odoo-db-data:
  odoo-data:
  pgadmin-data:

# Per a reclamar el certificat SSL (https)

# docker run --rm -it \
#     -v $(pwd)/certs:/etc/letsencrypt \
#     -v /root/tr3-front-back-24-25-dam-tr3-g1/vue/vuetify-project/dist:/var/www/html \
#     certbot/certbot certonly --webroot -w /var/www/html \
#     -d lordgrids.dam.inspedralbes.cat
